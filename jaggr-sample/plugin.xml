<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<!--
   (C) Copyright 2012, IBM Corporation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<plugin>
  <extension
    id="converter.jsxResourceConverter" 
  	point="com.ibm.jaggr.service.resourceconverter">
	<converter class="com.ibm.jaggr.core.impl.resource.JsxResourceConverter"/>
  </extension>

  <extension point="org.eclipse.equinox.http.registry.servlets">
    <servlet alias="/test/aggr" class="com.ibm.jaggr.service.impl.AggregatorImpl" load-on-startup="true">
      <!-- No scheme on the URI means the resource is located 
           in the same resource bundle as this file -->
      <init-param name="config" value="testaggr-config.js"/>
      <init-param name="resourceconverters" value="converter.jsxResourceConverter"/>
      <init-param name="serviceproviders" value="com.ibm.jaggr.service.configextension.bundleVersionsHash"/>
      
      <!-- The following init-params define internally scoped aliases and resource paths for the application, -->
      <!-- allowing the aggregator to serve as the resource servlet for all the application's resources       -->
      <!-- (aggregatored and non-aggregated).  This is an alternative to using the equinox resource servlet   -->
      <!-- to serve non-aggregated resources out of the application's OSGi bundles.                           -->
      <!--                                                                                                    -->
      <!-- The internally scoped version of the sample application can be loaded using the URL                -->
      <!-- http://<server>/test/aggr/app/res/test.html                                                   -->
      
      <init-param name="alias" value="/app/aggr"/>
      <init-param name="resource-id" value="res"/>
      <init-param name="resource-id" value="dojo"/>
      <init-param name="res:alias" value="/app/res"/>
      <init-param name="res:base-name" value="WebContent"/> 
      <init-param name="dojo:alias" value="/app/dojo-1.8.0"/>
      <init-param name="dojo:base-name" value="namedbundleresource://com.ibm.jaggr.sample.dojo/WebContent/source_1.8.0-20120830-IBM_dojo"/>
    </servlet>
  </extension>

  <extension point="org.eclipse.equinox.http.registry.httpcontexts">
    <httpcontext id="resources">
      <resource-mapping path="/WebContent" />
    </httpcontext>
  </extension>
    
  <extension point="org.eclipse.equinox.http.registry.filters">
    <filter alias="/test/res/*" class="com.ibm.jaggr.sample.BasicFilter" httpcontextId="resources" />
  </extension>
  
  <extension point="org.eclipse.equinox.http.registry.resources">
    <resource alias="/test/res" base-name="/" httpcontextId="resources" />
  </extension>
  
</plugin>
