<!--
   (C) Copyright 2012, IBM Corporation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.ibm.jaggr</groupId>
    <artifactId>jaggr</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>1.3.4-SNAPSHOT</version>
  </parent>
  
  <artifactId>jaggr-core</artifactId>
  <packaging>bundle</packaging>
  
  <name>Jaggr Core</name>
  <description>Javascript AMD Aggregator Core</description>
  
  <properties>
    <bundle.symbolicName>com.ibm.jaggr.core</bundle.symbolicName>
    <bundle.namespace>com.ibm.jaggr.core</bundle.namespace>
  </properties>

  <profiles>
    <profile>
      <id>java7</id>
      <activation>
        <jdk>1.7</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>java7</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <source>1.7</source>
                  <target>1.7</target>
                  <excludes>
                    <exclude>foo</exclude><!-- This replaces the exclude in the parent config -->
                  </excludes>
                  <includes>
                    <include>com/ibm/jaggr/core/impl/resource/NIOFileResource.java</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
  <build>
    <resources>
      <resource>
        <directory>${project.parent.basedir}</directory>
        <includes>
          <include>LICENSE</include>
          <include>NOTICE</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/java</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}</directory>
        <filtering>false</filtering>
        <includes>
          <include>WebContent/**</include>
          <include>META-INF/mime.types</include>
        </includes>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.4,)</versionRange>
                    <goals><goal>copy-dependencies</goal>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action><ignore /></action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <excludes>
            <exclude>com/ibm/jaggr/core/impl/resource/NIOFileResource.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <manifestLocation>META-INF</manifestLocation>
          <instructions>
            <Bundle-Name>jaggr-core</Bundle-Name>
            <Bundle-SymbolicName>${project.groupId}.core;singleton:=true</Bundle-SymbolicName>
            <Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>           
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>  
            <Export-Package>
              ${project.groupId}.core;version="${project.version}",
              ${project.groupId}.core.*;version="${project.version}",
              org.mozilla.javascript
            </Export-Package>          
            <Import-Package>
              javax.servlet;version="[2,4)",
              javax.servlet.http;version="[2,4)",
              javax.activation,
              !*
            </Import-Package>
            <Embed-Dependency>
              closure-compiler,
              commons-codec,
              commons-io,
              commons-lang3,
              concurrentlinkedhashmap-lru,
              guava,
              rhino,
              wink-json4j,
              commons-logging
            </Embed-Dependency>
            <Embed-Directory>lib</Embed-Directory>
            <Embed-StripGroup>true</Embed-StripGroup>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- This is so that eclipse will be able to resolve the bundle. -->
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>lib</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy less css parser</id>
            <phase>generate-sources</phase>
            <goals><goal>unpack</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.lesscss</groupId>
                  <artifactId>lesscss</artifactId>
                  <includes>**/less-rhino*.js</includes>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/lesscss</outputDirectory>
            </configuration>
          </execution>
          <execution><!-- For testing has feature encoding. -->
            <id>unpack-dojo</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.ibm.jaggr</groupId>
                  <artifactId>jaggr-sample-dojo</artifactId>
                  <includes>**/source*/dojo/**,**/source*/dojox/encoding/**</includes>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>src/main/java/com/ibm/jaggr/core/util/Term.java</exclude>
            <exclude>src/main/java/com/ibm/jaggr/core/util/Formula.java</exclude>
            <exclude>src/main/java/com/ibm/jaggr/core/util/NLS.java</exclude>
            <exclude>WebContent/postcss/postcss.js</exclude>
            <exclude>src/main/resources/less-rhino-1.7.0.js</exclude>
            <exclude>src/test/resources/specRunner.htmltemplate</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>.</directory>
              <includes>
                <include>lib/**</include>
                <include>src/main/resources/less*.js</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <browserVersion>FIREFOX_17</browserVersion>
          <sourceExcludes>
            <exclude>**/*.js</exclude>
          </sourceExcludes>
          <jsSrcDir>${basedir}/WebContent</jsSrcDir>
          <jsTestSrcDir>${basedir}/src/test/javascript</jsTestSrcDir>
          <preloadSources>
            <source>${basedir}/src/test/resources/loader-config.js</source>
            <source>/WebContent/loaderExtCommon.js</source>
            <source>/WebContent/dojo/_loaderExt.js</source>
            <source>${basedir}/src/test/resources/testShim.js</source>
            <source>/target/WebContent/dojo/dojo/dojo.js</source>
          </preloadSources>
          <customRunnerTemplate>${basedir}/src/test/resources/specRunner.htmltemplate</customRunnerTemplate>
          <timeout>30</timeout>
          <keepServerAlive>true</keepServerAlive>
        </configuration>
      </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
              <id>copy less parser</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <move tofile="${basedir}/src/main/resources/less-rhino-1.7.0.js">
                    <fileset dir="${project.build.directory}/lesscss">
                      <include name="**/less-rhino*.js" />
                    </fileset>
                  </move>
                </target>  
              </configuration>
            </execution>
            <execution>
              <id>rename-dojo-test-dir</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target unless="skipTests">
                  <move todir="${basedir}/target/WebContent/dojo">
                    <fileset dir="${basedir}/target/WebContent">
                      <include name="source_*_dojo/**" />
                    </fileset>
                    <cutdirsmapper dirs="1" />
                  </move>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.apache.wink</groupId>
      <artifactId>wink-json4j</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lesscss</groupId>
      <artifactId>lesscss</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.javascript</groupId>
      <artifactId>closure-compiler</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
      <artifactId>concurrentlinkedhashmap-lru</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.jaggr</groupId>
      <artifactId>jaggr-sample-dojo</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
      <scope>test</scope>
    </dependency>
     <dependency>
       <groupId>org.powermock</groupId>
       <artifactId>powermock-module-junit4</artifactId>
      <scope>test</scope>
     </dependency>
  </dependencies>
</project>
